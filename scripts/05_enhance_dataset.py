#!/usr/bin/env python3
"""
–£–ª—É—á—à–µ–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–∞ —á–µ—Ä–µ–∑ –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏—é –º–∏–Ω–æ—Ä–∏—Ç–∞—Ä–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
"""

import os
import albumentations as A
import cv2
import numpy as np
from utils.data_balancer import DataBalancer

def augment_minority_class(image_dir, label_dir, target_count, output_dir):
    """–ê—É–≥–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –º–∏–Ω–æ—Ä–∏—Ç–∞—Ä–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤"""
    
    transform = A.Compose([
        A.HorizontalFlip(p=0.5),
        A.RandomBrightnessContrast(p=0.2),
        A.Rotate(limit=15, p=0.3),
        A.GaussianBlur(blur_limit=3, p=0.1),
    ])
    
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏–∏...
    print(f"üîÑ –ê—É–≥–º–µ–Ω—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ {target_count} –ø—Ä–∏–º–µ—Ä–æ–≤")

def main():
    print("üé® –£–õ–£–ß–®–ï–ù–ò–ï –î–ê–¢–ê–°–ï–¢–ê –ß–ï–†–ï–ó –ê–£–ì–ú–ï–ù–¢–ê–¶–ò–Æ")
    
    balancer = DataBalancer()
    current_counts = balancer.analyze_current_balance()
    
    # –ê—É–≥–º–µ–Ω—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã, –≥–¥–µ –º–µ–Ω—å—à–µ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    for class_name, target in balancer.target_balance.items():
        current = current_counts.get(class_name, 0)
        if current < target:
            print(f"–ê—É–≥–º–µ–Ω—Ç–∏—Ä—É–µ–º {class_name}: {current} ‚Üí {target}")
            # augment_minority_class(...)

if __name__ == "__main__":
    main()
